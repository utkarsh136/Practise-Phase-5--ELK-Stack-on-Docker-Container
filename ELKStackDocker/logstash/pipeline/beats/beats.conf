input {
	beats {
		port => 5044
	}
	tcp {
		port => 5000
	}
}

filter {
	if "Request_Logging" in [message] {
		grok {
		match => { "message" => "(?<timestamp>[0-9]{2} %{MONTH} [0-9]{4} [0-9]{2}\:[0-9]{2}\:[0-9]{2}\,[0-9]{3}) %{LOGLEVEL:log_type}  \[%{GREEDYDATA:log_name}\] %{GREEDYDATA:iib_raw_request_message}" }
		}
		grok {
			match => { "iib_raw_request_message" => 'ORDER_ID="(?<iib_request_order_id>[a-zA-Z0-9]*)"' }
			break_on_match => false
		}
		grok {
			match => { "iib_raw_request_message" => 'TARGET_SYSTEM_NAME="(?<iib_request_target_system_name>[a-zA-Z]*)"' }
			break_on_match => false
		}
		grok {
			match => { "iib_raw_request_message" => 'OPERATION_NAME="(?<iib_request_service_name>[a-zA-Z_]*)"' }
			break_on_match => false
		}
		
	}
	if "Response_Logging" in [message] {
		grok {
		match => { "message" => "(?<timestamp>[0-9]{2} %{MONTH} [0-9]{4} [0-9]{2}\:[0-9]{2}\:[0-9]{2}\,[0-9]{3}) %{LOGLEVEL:log_type}  \[%{GREEDYDATA:log_name}\] %{GREEDYDATA:iib_raw_response_message}" }
		}
		grok {
			match => { "iib_raw_response_message" => 'ORDER_ID="(?<iib_response_order_id>[a-zA-Z0-9]*)"' }
			break_on_match => false
		}
		grok {
			match => { "iib_raw_response_message" => 'TARGET_SYSTEM_NAME="(?<iib_response_target_system_name>[a-zA-Z]*)"' }
			break_on_match => false
		}
		grok {
			match => { "iib_raw_response_message" => 'OPERATION_NAME="(?<iib_response_service_name>[a-zA-Z_]*)"' }
			break_on_match => false
		}
		grok {
			match => { "iib_raw_response_message" => 'DIF_TIME="(?<iib_response_duration>[0-9]*)"' }
			break_on_match => false
		}
		mutate {
			convert => { "iib_response_duration" => "integer" }
		}
	}
	if "Exception_Logging" in [message] {
		grok {
			match => { "message" => "(?<timestamp>[0-9]{2} %{MONTH} [0-9]{4} [0-9]{2}\:[0-9]{2}\:[0-9]{2}\,[0-9]{3}) %{LOGLEVEL:log_type}  \[%{GREEDYDATA:log_name}\] %{GREEDYDATA:iib_raw_exception_message}" }
		}
		grok {
			match => { "iib_raw_exception_message" => 'ORDER_ID="(?<iib_exception_order_id>[a-zA-Z0-9]*)"' }
			break_on_match => false
		}
		grok {
			match => { "iib_raw_exception_message" => 'TARGET_SYSTEM_NAME="(?<iib_exception_target_system_name>[a-zA-Z]*)"' }
			break_on_match => false
		}
		grok {
			match => { "iib_raw_exception_message" => 'OPERATION_NAME="(?<iib_exception_service_name>[a-zA-Z_]*)"' }
			break_on_match => false
		}
		
	}
	if "docker.elastic.co" in [image_name] {
		drop { }
	}	
	date {
		match => [ "timestamp", "dd MMM yyyy HH:mm:ss,SSS" ]
		target => "@timestamp"
		locale => "en"
		remove_field => [ "timestamp" ]
	}
	mutate {
		rename => ["host","hostname"]
		convert => {"hostname" => "string"}
	}
}

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
		user => "elastic"
		password => "changeme"
		ecs_compatibility => disabled
	}
}
